{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BookService = /*#__PURE__*/(() => {\n  class BookService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:7156/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getAllBooks() {\n      return this.http.get(this.baseUrl + \"GetAll\").pipe(map(data => {\n        return data;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      }));\n    }\n\n    addBook(book) {\n      const url = 'https://localhost:7156/Create';\n      return this.http.post(url, book, this.httpOptions);\n    }\n\n    getBook(bookId) {\n      return this.http.get(this.baseUrl + \"GetById\").pipe(map(data => {\n        return data;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      }));\n    }\n\n  }\n\n  BookService.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookService;\n})();","map":null,"metadata":{},"sourceType":"module"}